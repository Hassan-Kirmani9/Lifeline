{"ast":null,"code":"var _jsxFileName = \"D:\\\\src\\\\src\\\\pages\\\\BloodAvailability.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport CanvasJSReact from \"@canvasjs/react-charts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  CanvasJSChart\n} = CanvasJSReact;\nconst BarChart = () => {\n  _s();\n  const chartRef = useRef(null);\n  const [chartData, setChartData] = useState(null);\n  const [selectedBloodGroup, setSelectedBloodGroup] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"/api/BloodRL/predict\");\n        if (response.ok) {\n          const data = await response.json();\n          setChartData(data);\n        } else {\n          console.error(\"Failed to fetch data:\", response.status, response.statusText);\n        }\n      } catch (error) {\n        console.error(\"An error occurred while fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleBloodGroupChange = event => {\n    setSelectedBloodGroup(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    id: \"blood-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mx-auto mb-5\",\n      style: {\n        maxWidth: 500\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"d-inline-block text-uppercase border-bottom border-5 text-dblue\",\n        children: \"See\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"display-4 text-dblue\",\n        children: \"Blood Availability Predictions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), chartData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bloodGroupSelect\",\n        className: \"display-4 text-dblue\",\n        style: {\n          fontSize: \"20px\",\n          marginBottom: \"8px\",\n          display: \"block\",\n          textAlign: \"center\"\n        },\n        children: \"Blood Group:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"bloodGroupSelect\",\n          onChange: handleBloodGroupChange,\n          style: {\n            padding: \"8px\",\n            fontSize: \"17px\",\n            borderRadius: \"5px\",\n            border: \"1px solid #ccc\",\n            backgroundColor: \"#f0f0f0\",\n            textAlign: \"center\"\n          },\n          value: selectedBloodGroup || \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            hidden: true,\n            children: \"Select Blood Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), Object.keys(chartData).map(bloodGroup => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: bloodGroup,\n            children: bloodGroup\n          }, bloodGroup, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), selectedBloodGroup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hospital-chart text-dblue\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: [selectedBloodGroup, \" Blood Group\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n          options: {\n            animationEnabled: true,\n            theme: \"dark2\",\n            title: {\n              text: \"Blood Availability Prediction For The Next Two Days\"\n            },\n            axisY: {\n              title: \"Predicted Availability\",\n              scaleBreaks: {\n                autoCalculate: true,\n                type: \"wavy\",\n                lineColor: \"white\"\n              }\n            },\n            data: [{\n              type: \"column\",\n              indexLabel: \"{y}%\",\n              indexLabelFontColor: \"white\",\n              dataPoints: Object.values(chartData[selectedBloodGroup]).map(item => ({\n                label: item.hospitalName,\n                y: item.predictedAvailability\n              }))\n            }]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"/Zx5IoY6FQR4qV+cwtCVi3CD/PA=\");\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","CanvasJSReact","jsxDEV","_jsxDEV","CanvasJSChart","BarChart","_s","chartRef","chartData","setChartData","selectedBloodGroup","setSelectedBloodGroup","fetchData","response","fetch","ok","data","json","console","error","status","statusText","handleBloodGroupChange","event","target","value","className","id","children","style","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","fontSize","marginBottom","display","textAlign","onChange","padding","borderRadius","border","backgroundColor","disabled","hidden","Object","keys","map","bloodGroup","options","animationEnabled","theme","title","text","axisY","scaleBreaks","autoCalculate","type","lineColor","indexLabel","indexLabelFontColor","dataPoints","values","item","label","hospitalName","y","predictedAvailability","_c","$RefreshReg$"],"sources":["D:/src/src/pages/BloodAvailability.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport CanvasJSReact from \"@canvasjs/react-charts\";\r\n\r\nconst { CanvasJSChart } = CanvasJSReact;\r\n\r\nconst BarChart = () => {\r\n  const chartRef = useRef(null);\r\n  const [chartData, setChartData] = useState(null);\r\n  const [selectedBloodGroup, setSelectedBloodGroup] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"/api/BloodRL/predict\"\r\n        );\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setChartData(data);\r\n        } else {\r\n          console.error(\r\n            \"Failed to fetch data:\",\r\n            response.status,\r\n            response.statusText\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.error(\"An error occurred while fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleBloodGroupChange = (event) => {\r\n    setSelectedBloodGroup(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\" id=\"blood-section\">\r\n      <div className=\"text-center mx-auto mb-5\" style={{ maxWidth: 500 }}>\r\n        <h5 className=\"d-inline-block text-uppercase border-bottom border-5 text-dblue\">\r\n          See\r\n        </h5>\r\n        <h3 className=\"display-4 text-dblue\">Blood Availability Predictions</h3>\r\n      </div>\r\n      {chartData && (\r\n        <div className=\"chart-container\">\r\n          <label\r\n            htmlFor=\"bloodGroupSelect\"\r\n            className=\"display-4 text-dblue\"\r\n            style={{\r\n              fontSize: \"20px\",\r\n              marginBottom: \"8px\",\r\n              display: \"block\",\r\n              textAlign: \"center\",\r\n            }}\r\n          >\r\n            Blood Group:\r\n          </label>\r\n\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <select\r\n              id=\"bloodGroupSelect\"\r\n              onChange={handleBloodGroupChange}\r\n              style={{\r\n                padding: \"8px\",\r\n                fontSize: \"17px\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #ccc\",\r\n                backgroundColor: \"#f0f0f0\",\r\n                textAlign: \"center\",\r\n              }}\r\n              value={selectedBloodGroup || \"\"}\r\n            >\r\n              <option value=\"\" disabled hidden>\r\n                Select Blood Group\r\n              </option>\r\n              {Object.keys(chartData).map((bloodGroup) => (\r\n                <option key={bloodGroup} value={bloodGroup}>\r\n                  {bloodGroup}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <br />\r\n\r\n          {selectedBloodGroup && (\r\n            <div className=\"hospital-chart text-dblue\">\r\n              <h3 style={{ textAlign: \"center\" }}>\r\n                {selectedBloodGroup} Blood Group\r\n              </h3>\r\n              <br />\r\n              <CanvasJSChart\r\n                options={{\r\n                  animationEnabled: true,\r\n                  theme: \"dark2\",\r\n                  title: {\r\n                    text: \"Blood Availability Prediction For The Next Two Days\",\r\n                  },\r\n                  axisY: {\r\n                    title: \"Predicted Availability\",\r\n                    scaleBreaks: {\r\n                      autoCalculate: true,\r\n                      type: \"wavy\",\r\n                      lineColor: \"white\",\r\n                    },\r\n                  },\r\n                  data: [\r\n                    {\r\n                      type: \"column\",\r\n                      indexLabel: \"{y}%\",\r\n                      indexLabelFontColor: \"white\",\r\n                      dataPoints: Object.values(\r\n                        chartData[selectedBloodGroup]\r\n                      ).map((item) => ({\r\n                        label: item.hospitalName,\r\n                        y: item.predictedAvailability,\r\n                      })),\r\n                    },\r\n                  ],\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}